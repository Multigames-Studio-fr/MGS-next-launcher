<div id="landingContainer" class="no-scroll" style="display: none;">
    <link rel="stylesheet" href="./assets/css/output.css">

    <div class="flex min-h-screen w-full relative fit-content"
        style="background: url('./assets/images/backgrounds/0.jpg') center/cover no-repeat;">
        <!-- Overlay sombre global -->
        <div class="absolute inset-0 bg-black/60 z-0"></div>
        <!-- Overlay glassmorphism global -->
        <div class="absolute inset-0 z-0" style="backdrop-filter: blur(12px) !important; -webkit-backdrop-filter: blur(12px) !important;"></div>
        <style>
            :root {
                --primary: #451F21;
                --secondary: #F8BA59;
                --secondary-dark: #EB843B;
                --white: #FFFFFF;
            }

            /* Glassmorphism global */
            .glass-global {
                background: rgba(24, 24, 24, 0.30);
                border-radius: 2rem;
                box-shadow: 0 8px 32px 0 #00000033;
                border: 1px solid rgba(255, 255, 255, 0.10);
                backdrop-filter: blur(18px);
                -webkit-backdrop-filter: blur(18px);
            }

            /* Ajoute ce bloc dans un <style> existant ou nouveau */
            .glass-sidebar {
                transition: transform 0.18s cubic-bezier(.4, 0, .2, 1), box-shadow 0.18s;
            }

            .glass-sidebar:hover {
                transform: translateY(-4px) scale(1.04);
                box-shadow: 0 8px 32px 0 #F8BA5977;
            }

            /* Sidebar instances styling */
            .server-instance-item {
                list-style: none;
                padding: 0;
                margin: 0;
            }

            .server-instance-btn {
                background: none;
                border: none;
                padding: 0;
                cursor: pointer;
                transition: all 0.2s ease;
                border-radius: 0.75rem;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .server-instance-btn:hover {
                transform: scale(1.1) translateY(-2px);
            }

            .server-instance-btn.selected {
                transform: scale(1.05);
            }

            .server-instance-btn img {
                filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
            }

            .server-instance-btn:hover img {
                filter: drop-shadow(0 6px 12px rgba(248, 186, 89, 0.4));
            }
        </style>
     

        <!-- Main content glassmorphism -->
        <main class="relative z-10 flex-1 flex flex-col justify-center px-6 sm:px-8 md:px-12 lg:px-20 xl:px-32 fade-in glass-main-content"
            style="margin: 1.5rem 1rem 1.5rem 0; border-radius: 0 2rem 2rem 0; padding: 2rem 1.5rem; backdrop-filter: blur(20px); -webkit-backdrop-filter: blur(20px); background: rgba(0, 0, 0, 0.15); border: 1px solid rgba(255, 255, 255, 0.08);">
            <div class="max-w-3xl space-y-6">
                <span
                    class="inline-block px-3 py-1 bg-white/10 text-[#F8BA59] font-semibold rounded-full text-xs sm:text-sm mb-3 sm:mb-4 tracking-widest">LE
                    PLUS POPULAIRE</span>
                <h1 class="text-3xl sm:text-4xl md:text-5xl font-extrabold text-white drop-shadow-lg mb-2 font-mojang server-title"> Veuillez
                    sélectionner une instance</h1>
                <p class="text-base sm:text-lg text-white/90 font-medium mb-2 server-desc"> Aucune instance sélectionnée.<br>Choisissez
                    une instance pour voir ses informations.</p>
                <div class="flex flex-wrap items-center gap-2 sm:gap-4 mb-2 text-sm sm:text-base">
                    <span class="text-white/70 text-sm">Version :</span>
                    <span class="text-white font-bold server-version">--</span>
                    <span class="text-white/70 text-sm">Loader :</span>
                    <span class="text-white font-bold server-loader">--</span>
                </div>
                <div class="play-instance flex flex-col sm:flex-row items-center gap-3 sm:gap-4 mb-4 sm:mb-6">
                    <button id="launch_button"
                        class="play-btn flex items-center gap-2 sm:gap-3 px-6 sm:px-8 py-2 sm:py-3 rounded-xl sm:rounded-2xl bg-[#FF6A1A] hover:bg-[#F8BA59] text-white font-bold text-lg sm:text-xl md:text-2xl shadow-xl transition-all duration-200 w-full sm:w-auto">
                        <svg class="w-5 h-5 sm:w-6 sm:h-6 md:w-7 md:h-7" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M6 4l12 6-12 6V4z" />
                        </svg>
                        <%- lang('landing.launchButton') %>
                    </button>
                    <button id="settingsMediaButton"
                        class="settings-btn flex items-center justify-center w-10 h-10 sm:w-12 sm:h-12 md:w-14 md:h-14 rounded-lg sm:rounded-xl bg-[#181818] hover:bg-[#F8BA59]/80 text-white transition shadow-lg">

                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 sm:w-6 sm:h-6 md:w-7 md:h-7 text-white"fill=" currentColor" class="bi bi-gear"
                            viewBox="0 0 16 16">
                            <path
                                d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0" />
                            <path
                                d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z" />
                        </svg>
                    </button>

                </div>
        <br> <br>
                <!-- Remplace tout le bloc .play-instance par le bloc .info-starting-game ci-dessous -->
                <div id="launch_details" class="info-starting-game hidden game-launch-overlay h-20 z-50 pointer-events-none">
                    <br>
                    <div class="flex flex-col  justify-center w-full pb-12 gap-3">
                        <div class="flex items-center gap-3">
                            <span class="inline-flex ">
                                <svg class="w-6 h-6 text-[#F8BA59]" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="12" cy="12" r="10" stroke-opacity=".4"/>
                                    <path d="M12 6v6l3.5 3.5" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                            </span>
                            <div id="launch_details_text" class="info-starting-game-text text-white text-xl font-bold tracking-wide" aria-live="polite">Préparation du jeu...</div>
                        </div>
                        <div class=" max-w-xl flex flex-col gap-2">
                            <div class="relative h-4 rounded-lg overflow-hidden bg-white/15 backdrop-blur-sm border border-white/10">
                                <div id="launch_progress_bar" class="progress-bar-inner h-full w-0 bg-gradient-to-r from-[#FF6A1A] via-[#F8BA59] to-[#FF6A1A]
                                            shadow-[0_0_0_1px_#00000055_inset] transition-[width] duration-300 ease-out"></div>
                                <div class="absolute inset-0 bg-[linear-gradient(120deg,#ffffff22_25%,transparent_25%,transparent_50%,#ffffff22_50%,#ffffff22_75%,transparent_75%,transparent)] bg-[length:200%_100%] animate-[shine_2.2s_linear_infinite] pointer-events-none mix-blend-overlay"></div>
                                <progress id="launch_progress" style="display: none;" value="22" max="100"></progress>
                            </div>
                            <div class="flex justify-between text-xs font-semibold text-white/70 tabular-nums">
                                <span class="progress-label">Initialisation...</span>
                                <span id="launch_progress_label" class="progress-value">0%</span>
                            </div>
                        </div>
                        <button type="button"
                                class="cancel-launch pointer-events-auto mt-1 px-4 py-1.5 text-sm font-semibold rounded-md bg-white/10 hover:bg-white/20 text-white border border-white/15 transition disabled:opacity-40 disabled:cursor-not-allowed"
                                style="backdrop-filter: blur(6px); -webkit-backdrop-filter: blur(6px); display:none;">
                            Annuler
                        </button>
                    </div>
                </div>
                <!-- Sélecteur d'instance (optionnel, à afficher si plusieurs instances) -->
                <div class="flex items-center gap-2 mb-8 hidden">
                    <span class="text-[#F8BA59] font-bold text-xl"><!-- Icone instance dynamique --></span>
                    <select id="server_selection_button"
                        class="instance-select bg-white/90 text-[#181818] font-semibold rounded-xl px-4 py-2 shadow focus:outline-none">
                        <!-- JS: injecte les options ici -->
                    </select>
                </div>
                <!-- Statut serveur -->
                <div class="flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-4 mt-2" id="server_status_wrapper">
                    <div class="flex items-center gap-2">
                        <span class="server-status-dot w-3 h-3 rounded-full bg-green-400"></span>
                        <span class="text-white font-semibold text-base sm:text-lg server-status-name">Multigames-Studio.fr</span>
                    </div>
                    <span class="text-white/70 text-sm sm:text-base server-status-text">Opérationnel • <span
                            class="font-bold text-[#F8BA59]" id="player_count">0</span> <span id="landingPlayerLabel">joueurs</span></span>
                </div>

                <!-- Section News -->
                <section class="mt-8 sm:mt-10 md:mt-12" id="newsContainer" style="display: none;">
                    <h2 class="text-2xl sm:text-3xl font-bold text-white mb-3 sm:mb-4 flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-3">
                        <span class="inline-flex items-center justify-center w-9 h-9 sm:w-10 sm:h-10 md:w-11 md:h-11 rounded-lg sm:rounded-xl bg-[#F8BA59]/15 border border-[#F8BA59]/30 text-[#F8BA59]">
                            <svg class="w-5 h-5 sm:w-6 sm:h-6" fill="none" stroke="currentColor" stroke-width="2"
                                 viewBox="0 0 24 24">
                                <path d="M4 6h16M4 12h10M4 18h16"></path>
                            </svg>
                        </span>
                        <span>Actualités</span>
                        <button class="refresh-news text-xs sm:text-sm ml-0 sm:ml-4 px-2 sm:px-3 py-1 sm:py-1.5 rounded-md sm:rounded-lg bg-[#181818]/70 hover:bg-[#F8BA59]/80 hover:text-[#181818] text-white border border-white/10 transition shadow">
                            Rafraîchir
                        </button>
                    </h2>

                    <!-- News Content -->
                    <div id="newsContent" class="news-list" article="-1" style="display: none;">
                        <div class="news-grid" aria-live="polite">
                            <div id="newsStatusContainer">
                                <div id="newsStatusContent">
                                    <div id="newsTitleContainer">
                                        <a id="newsArticleTitle" href="#">Lorem Ipsum</a>
                                    </div>
                                    <div id="newsMetaContainer">
                                        <div id="newsArticleDateWrapper">
                                            <span id="newsArticleDate">Mar 15, 44 BC, 9:14 AM</span>
                                        </div>
                                        <div id="newsArticleAuthorWrapper">
                                            <span id="newsArticleAuthor">by Cicero</span>
                                        </div>
                                        <a href="#" id="newsArticleComments">0 Comments</a>
                                    </div>
                                </div>
                                <div id="newsNavigationContainer">
                                    <button id="newsButtonl">
                                        <div id="newsButtonAlert" style="display: none;"></div>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-arrow-up-short" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5"/>
                                        </svg>
                                    </button>
                                    <button id="newsNavigateLeft">
                                        <svg id="newsNavigationLeftSVG" viewBox="0 0 24.87 13.97">
                                            <defs>
                                                <style>
                                                    .arrowLine {
                                                        fill: none;
                                                        stroke: #fff;
                                                        stroke-width: 2px;
                                                        transition: 0.25s ease;
                                                    }
                                                </style>
                                            </defs>
                                            <polyline
                                                class="arrowLine"
                                                points="0.71 13.26 12.56 1.41 24.16 13.02"
                                            />
                                        </svg>
                                    </button>
                                    <span id="newsNavigationStatus"><%- lang('landing.newsNavigationStatus', { currentPage: 1, totalPages: 1 }) %></span>
                                    <button id="newsNavigateRight">
                                        <svg id="newsNavigationRightSVG" viewBox="0 0 24.87 13.97">
                                            <defs>
                                                <style>
                                                    .arrowLine {
                                                        fill: none;
                                                        stroke: #fff;
                                                        stroke-width: 2px;
                                                        transition: 0.25s ease;
                                                    }
                                                </style>
                                            </defs>
                                            <polyline
                                                class="arrowLine"
                                                points="0.71 13.26 12.56 1.41 24.16 13.02"
                                            />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                            <div id="newsArticleContainer">
                                <div id="newsArticleContent">
                                    <div id="newsArticleContentScrollable">
                                        <!-- Article Content -->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Template for a single news card (horizontal card used in the right column) -->
                        <template id="news-card-template">
                            <article class="news-card glass-global relative overflow-hidden" role="article">
                                <div class="news-image absolute inset-0 bg-cover bg-center"></div>
                                <div class="news-overlay absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                                <div class="news-badges absolute left-4 top-4 flex gap-2"></div>
                                <div class="news-content absolute left-4 bottom-4 right-4 text-left text-white">
                                    <div class="news-title-stacked font-extrabold text-xl leading-tight"></div>
                                    <div class="news-excerpt-stacked mt-1 text-sm text-white/80"></div>
                                    <div class="flex items-center justify-between mt-2 text-xs text-white/70">
                                        <div class="news-date"><span class="news-date-day font-semibold"></span> <span class="news-date-month ml-1"></span></div>
                                        <button class="news-open-button glass-btn px-3 py-1 font-semibold">Voir</button>
                                    </div>
                                </div>
                                <button class="news-play absolute inset-0 flex items-center justify-center pointer-events-none opacity-0 transition-opacity">
                                    <svg class="w-16 h-16 text-white drop-shadow-xl" viewBox="0 0 24 24" fill="currentColor"><path d="M8 5v14l11-7z"/></svg>
                                </button>
                            </article>
                        </template>
                    </div>

                    <!-- News Error Container -->
                    <div id="newsErrorContainer">
                        <div id="newsErrorLoading">
                            <span id="nELoadSpan" class="newsErrorContent text-white"><%- lang('landing.newsErrorLoadSpan') %></span>
                        </div>
                        <div id="newsErrorFailed" style="display: none">
                            <span id="nEFailedSpan" class="newsErrorContent text-white"><%- lang('landing.newsErrorFailedSpan') %></span>
                            <button id="newsErrorRetry" class="bg-[#F8BA59] hover:bg-[#EB843B] text-white px-3 py-1 rounded text-sm">
                                <%- lang('landing.newsErrorRetryButton') %>
                            </button>
                        </div>
                        <div id="newsErrorNone" style="display: none">
                            <span id="nENoneSpan" class="newsErrorContent text-white"><%- lang('landing.newsErrorNoneSpan') %></span>
                        </div>
                    </div>
                </section>
            </div>
        </main>
           <!-- Sidebar verticale Multigames style -->
        <aside class="relative z-10 flex flex-col justify-between items-center py-4 sm:py-6 md:py-8 w-20 sm:w-24 md:w-32 min-h-screen fade-in ">
            <!-- Filtre noir sur la sidebar -->
            
            <!-- Contenu de la sidebar -->
            <div class="flex flex-col items-center gap-6 sm:gap-8 md:gap-10 relative z-10">
                <div class="relative">
                    <div class="glass-sidebar bg-[#181818]/60 rounded-2xl sm:rounded-3xl py-1 sm:py-2 px-1 sm:px-2 flex flex-col gap-4 sm:gap-6 shadow-2xl border border-white/10"
                        style="backdrop-filter: blur(12px); -webkit-backdrop-filter: blur(12px);">
                        <div id="avatarContainer" alt="Profil"
                            class="player-head flex flex-col gap-6 sm:gap-8 items-center justify-center w-10 h-10 sm:w-12 sm:h-12 md:w-14 md:h-14 rounded-2xl sm:rounded-3xl border-2 border-[#181818] shadow-lg object-cover bg-white">
                        </div>
                    </div>
                   
                    <span style="border-radius:5px"
                        class="absolute top-0 right-0 sm:top-1 sm:right-1 w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5 bg-green-400 border-1 sm:border-2 border-white "></span>
                </div>
                <!-- Bloc glassmorphism arrondi pour les instances -->
                <div class="flex flex-col items-center justify-center gap-4 sm:gap-6 mt-6 sm:mt-8 md:mt-10 ">
                    <div class="glass-sidebar bg-[#181818]/60 hover:bg-[#F8BA59]/30 rounded-2xl sm:rounded-3xl py-2 sm:py-3 md:py-4 px-2 sm:px-3 md:px-4 flex flex-col gap-4 sm:gap-6 shadow-2xl border border-white/10"
                        style="backdrop-filter: blur(12px); -webkit-backdrop-filter: blur(12px);">
                        <ul id="sidebar-instances" class="flex flex-col gap-4 sm:gap-6 md:gap-8 items-center justify-center">
                            <!-- JS: injecte dynamiquement les boutons d'instances ici -->
                            <li class="text-white/50 text-xs text-center">Chargement...</li>
                        </ul>
                    </div>
                </div>
            </div>



        </aside>
    </div>

    <!-- Cache les éléments legacy pour compatibilité -->
    <div style="display: none;">
        <div id="user_content">
            <span id="user_text"><%- lang('landing.usernamePlaceholder') %></span>
            <button id="avatarOverlay"><%- lang('landing.usernameEditButton') %></button>
        </div>
        <div id="launch_content">
            <button id="server_selection_button"><%- lang('landing.launchButtonPlaceholder') %></button>
        </div>
        <!-- Mojang Status (caché mais gardé pour les fonctions JS) -->
        <div id="mojangStatusContainer" style="display: none;">
            <span id="mojang_status_icon">&#8226;</span>
            <div id="mojangStatusTooltip">
                <div id="mojangStatusTooltipTitle"><%- lang('landing.mojangStatusTooltipTitle') %></div>
                <div id="mojangStatusEssentialContainer"></div>
                <div id="mojangStatusNEContainer">
                    <div class="mojangStatusNEBar"></div>
                    <div id="mojangStatusNETitle"><%- lang('landing.mojangStatusNETitle') %></div>
                    <div class="mojangStatusNEBar"></div>
                </div>
                <div id="mojangStatusNonEssentialContainer"></div>
            </div>
        </div>
    </div>

    <!-- Styles et scripts pour la nouvelle interface -->
    <style>
        /* Apparition douce du contenu principal */
        main .max-w-2xl {
            animation: fadeInUp 0.7s cubic-bezier(.4, 0, .2, 1);
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(32px);
            }

            to {
                opacity: 1;
                transform: none;
            }
        }

        /* Apparition douce de la sidebar */
        aside {
            animation: fadeInLeft 0.7s cubic-bezier(.4, 0, .2, 1);
        }

        @keyframes fadeInLeft {
            from {
                opacity: 0;
                transform: translateX(-32px);
            }

            to {
                opacity: 1;
                transform: none;
            }
        }

        /* Animation d'apparition générique */
        .fade-in {
            opacity: 0;
            transform: translateY(32px);
            animation: fadeInUp 0.7s cubic-bezier(.4, 0, .2, 1) forwards;
        }
        /* Right-aligned news grid */
        .news-list { display:flex; justify-content:flex-end; }
        .news-grid {
            width: 100%; 
            max-width: 820px;
            display: grid;
            grid-template-columns: 1fr;
            gap: 12px;
            align-items: start;
        }
        
        @media (min-width: 768px) {
            .news-grid {
                grid-template-columns: 1fr 1fr;
                gap: 18px;
            }
        }
        
        .news-card {
            height: 140px;
            border-radius: 12px;
            overflow: hidden;
            position: relative;
            background: #00000033;
        }
        
        @media (min-width: 768px) {
            .news-card {
                height: 160px;
            }
        }
        .news-image { width: 100%; height: 100%; }
        .news-overlay { pointer-events: none; }
        .news-badges { pointer-events: none; }
        .news-content { pointer-events: auto; }
        .news-title-stacked { font-size: 1.05rem; }
        .news-excerpt-stacked { font-size: 0.95rem; }
        .news-open-button { white-space: nowrap; }
        .news-play { pointer-events: none; }
        .news-card:hover .news-play { opacity: 1; pointer-events: none; }
        /* Boutons principaux : effet de survol doux et léger */
        .play-btn,
        .settings-btn,
        .w-14.h-14 {
            transition: background 0.18s, color 0.18s, box-shadow 0.18s, transform 0.18s;
            will-change: transform, box-shadow;
        }

        .play-btn:hover {
            background: #F8BA59;
            color: #181818;
            box-shadow: 0 6px 24px 0 #F8BA5977;
            transform: translateY(-2px) scale(1.04);
        }

        .settings-btn:hover,
        .w-14.h-14:hover {
            background: #F8BA59;
            color: #181818;
            box-shadow: 0 4px 16px 0 #F8BA5977;
            transform: scale(1.06);
        }

        /* Animation sur le select d'instance */
        .instance-select {
            transition: box-shadow 0.16s, border 0.16s;
        }

        .instance-select:focus {
            box-shadow: 0 0 0 2px #F8BA59cc;
            border-color: #F8BA59;
        }

        /* Animation sur le dot de statut serveur */
        .server-status-dot {
            animation: pulse 1.4s cubic-bezier(.4, 0, .2, 1) infinite alternate;
        }

        @keyframes pulse {
            from {
                box-shadow: 0 0 0 0 #4ade80aa;
            }

            to {
                box-shadow: 0 0 0 10px #4ade8000;
            }
        }

        /* Button glass style */
        .glass-btn {
            background: rgba(255,255,255,0.06);
            border: 1px solid rgba(255,255,255,0.10);
            color: #FFFFFF;
            border-radius: 10px;
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            transition: transform .12s ease, background .12s ease;
        }
        .glass-btn:hover { transform: translateY(-2px); background: rgba(255,255,255,0.10); }

        /* Latest news specific styling */
        .news-card.glass-global { background: rgba(24,24,24,0.36); border-radius:12px; padding:12px; display:flex; align-items:center; gap:12px; }
        .news-thumb { width:140px; height:84px; background-size:cover; background-position:center; border-radius:8px; flex-shrink:0; }
        .news-title { margin:0; }
        .news-excerpt { margin:0; }

        @keyframes shine {
            0% { background-position: -200% 0; }
            100% { background-position: 200% 0; }
        }

        /* Responsive adjustments */
        @media (max-width: 1280px) {
            main {
                padding-left: 2rem !important;
                padding-right: 2rem !important;
            }
        }

        @media (max-width: 1024px) {
            main {
                padding-left: 1.5rem !important;
                padding-right: 1.5rem !important;
                margin-right: 0.5rem !important;
            }
        }

        @media (max-width: 768px) {
            main {
                padding-left: 1rem !important;
                padding-right: 1rem !important;
                margin-top: 0.5rem !important;
                margin-bottom: 0.5rem !important;
                margin-right: 0.5rem !important;
            }
            
            .server-title {
                font-size: 2rem !important;
                line-height: 2.25rem !important;
            }
        }

        @media (max-width: 640px) {
            main {
                border-radius: 0 1rem 1rem 0 !important;
            }
        }
    </style>

    <script>
        window.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.fade-in').forEach((el, i) => {
                setTimeout(() => {
                    el.classList.remove('fade-in');
                }, 150 + i * 80);
            });
        });

        // Hook bouton refresh news
        document.addEventListener('DOMContentLoaded', () => {
            const btn = document.querySelector('.refresh-news');
            if (btn && typeof initNews === 'function') {
                btn.addEventListener('click', () => {
                    btn.disabled = true;
                    btn.classList.add('opacity-60');
                    initNews().finally(() => {
                        btn.disabled = false;
                        btn.classList.remove('opacity-60');
                    });
                });
            }
        });
    </script>

    <script>
        // Progress bar handler compatible avec le code existant
        (function () {
            const root = document.querySelector('.game-launch-overlay');
            if (!root) return;
            const bar = root.querySelector('#launch_progress_bar');
            const valueEl = root.querySelector('#launch_progress_label');
            const labelEl = root.querySelector('#launch_details_text');

            window.gameLaunchUI = {
                show(label = 'Préparation du jeu...') {
                    if (labelEl) labelEl.textContent = label;
                    root.classList.remove('hidden');
                    requestAnimationFrame(() => root.classList.add('active'));
                },
                hide() {
                    root.classList.remove('active');
                    setTimeout(() => root.classList.add('hidden'), 380);
                },
                progress(pct, label) {
                    if (pct < 0) pct = 0;
                    if (pct > 100) pct = 100;
                    if (bar) bar.style.width = pct + '%';
                    if (valueEl) valueEl.textContent = pct.toFixed(0) + '%';
                    if (label && labelEl) labelEl.textContent = label;
                },
                reset() {
                    this.progress(0, 'Initialisation...');
                }
            };

            // Override des fonctions existantes pour la compatibilité
            window.oldToggleLaunchArea = window.toggleLaunchArea;
            window.toggleLaunchArea = function(loading) {
                if (loading) {
                    root.classList.remove('hidden');
                    document.querySelector('.play-instance').style.display = 'none';
                } else {
                    root.classList.add('hidden');
                    document.querySelector('.play-instance').style.display = 'flex';
                }
            };

            window.oldSetLaunchPercentage = window.setLaunchPercentage;
            window.setLaunchPercentage = function(percent) {
                if (bar) bar.style.width = percent + '%';
                if (valueEl) valueEl.textContent = percent + '%';
                // Garde l'ancienne progress bar cachée mais mise à jour
                const oldProgress = document.getElementById('launch_progress');
                if (oldProgress) {
                    oldProgress.setAttribute('value', percent);
                }
            };

            window.oldSetLaunchDetails = window.setLaunchDetails;
            window.setLaunchDetails = function(details) {
                if (labelEl) labelEl.textContent = details;
            };
        })();
    </script>

    <script>
        // Helper: create a news card from data and inject into .news-list
        window.renderNewsCard = function (data) {
            const tpl = document.getElementById('news-card-template');
            if (!tpl) return null;
            const el = tpl.content.firstElementChild.cloneNode(true);
            const imgEl = el.querySelector('.news-image');
            const badgesEl = el.querySelector('.news-badges');
            const title = el.querySelector('.news-title-stacked');
            const excerpt = el.querySelector('.news-excerpt-stacked');
            const dateDay = el.querySelector('.news-date-day');
            const dateMonth = el.querySelector('.news-date-month');
            const openBtn = el.querySelector('.news-open-button');
            const playBtn = el.querySelector('.news-play');

            if (data.thumb) imgEl.style.backgroundImage = `url('${data.thumb}')`;
            if (data.title) title.textContent = data.title;
            if (data.excerpt) excerpt.textContent = data.excerpt;
            if (data.link) el.setAttribute('data-link', data.link);

            // badges (array of text or HTML snippets)
            badgesEl.innerHTML = '';
            if (Array.isArray(data.badges)) {
                data.badges.forEach(b => {
                    const span = document.createElement('span');
                    span.className = 'inline-block px-2 py-1 bg-white/10 text-xs rounded font-semibold';
                    span.textContent = b;
                    badgesEl.appendChild(span);
                });
            }

            // date support
            if (data.date) {
                if (typeof data.date === 'string') {
                    const d = new Date(data.date);
                    if (!isNaN(d)) {
                        if (dateDay) dateDay.textContent = d.getDate();
                        if (dateMonth) dateMonth.textContent = d.toLocaleString('default', { month: 'short' });
                    }
                } else if (typeof data.date === 'object') {
                    if (dateDay) dateDay.textContent = data.date.day || '';
                    if (dateMonth) dateMonth.textContent = data.date.month || '';
                }
            }

            // show play overlay when data.play === true
            if (data.play) {
                playBtn.style.opacity = '1';
                playBtn.style.pointerEvents = 'none';
            }

            if (openBtn) {
                openBtn.addEventListener('click', () => {
                    const link = el.getAttribute('data-link');
                    if (link) window.open(link, '_blank');
                });
            }

            return el;
        };

        // Set the latest news content into news grid
        window.setLatestNews = function (data) {
            const grid = document.querySelector('.news-grid');
            if (!grid) return;
            grid.innerHTML = '';
            const card = window.renderNewsCard(data);
            if (card) grid.appendChild(card);
        };
    </script>

    <script src="./assets/js/scripts/landing.js"></script>
</div>